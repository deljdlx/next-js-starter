// ğŸ“‚ hooks/usePosts.ts
import { PostWithAuthor } from "../types/post";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { fetchPosts, createPost } from "../services/posts";



export const usePosts = (initialPosts?: PostWithAuthor[]) => {
  return useQuery<PostWithAuthor[]>({
      queryKey: ["posts"], // ClÃ© pour identifier la requÃªte
      queryFn: fetchPosts,  // Fonction de rÃ©cupÃ©ration des posts
      initialData: initialPosts, // Utiliser les posts SSR comme base
      staleTime: 60000, // Optionnel : Ã©vite le re-fetch immÃ©diat
  });
};



export const useCreatePost = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: createPost,
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ["posts"] }); // ğŸ”¥ Met Ã  jour la liste
        },
    });
};
